//*
// Detailed description can be found at Message structure
// document located at our Google Disk
// https://docs.google.com/document/d/1ts1DDmu5vxEagHPvB-IHTW-5ts06XoZTdIjUIOGylGo/
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: ExternalProtocol.proto

//
// ExternalProtocol package contains external protocol messages. Those are the messages between the robot and cloud.

package ba_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectResponse_Type int32

const (
	ConnectResponse_OK ConnectResponse_Type = 0
	//*
	// If some car is already logged in under same company and name
	ConnectResponse_ALREADY_LOGGED ConnectResponse_Type = 1
)

// Enum value maps for ConnectResponse_Type.
var (
	ConnectResponse_Type_name = map[int32]string{
		0: "OK",
		1: "ALREADY_LOGGED",
	}
	ConnectResponse_Type_value = map[string]int32{
		"OK":             0,
		"ALREADY_LOGGED": 1,
	}
)

func (x ConnectResponse_Type) Enum() *ConnectResponse_Type {
	p := new(ConnectResponse_Type)
	*p = x
	return p
}

func (x ConnectResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ExternalProtocol_proto_enumTypes[0].Descriptor()
}

func (ConnectResponse_Type) Type() protoreflect.EnumType {
	return &file_ExternalProtocol_proto_enumTypes[0]
}

func (x ConnectResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectResponse_Type.Descriptor instead.
func (ConnectResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{3, 0}
}

type Status_DeviceState int32

const (
	Status_CONNECTING Status_DeviceState = 0
	Status_RUNNING    Status_DeviceState = 1
	Status_ERROR      Status_DeviceState = 2
	Status_DISCONNECT Status_DeviceState = 3
)

// Enum value maps for Status_DeviceState.
var (
	Status_DeviceState_name = map[int32]string{
		0: "CONNECTING",
		1: "RUNNING",
		2: "ERROR",
		3: "DISCONNECT",
	}
	Status_DeviceState_value = map[string]int32{
		"CONNECTING": 0,
		"RUNNING":    1,
		"ERROR":      2,
		"DISCONNECT": 3,
	}
)

func (x Status_DeviceState) Enum() *Status_DeviceState {
	p := new(Status_DeviceState)
	*p = x
	return p
}

func (x Status_DeviceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_DeviceState) Descriptor() protoreflect.EnumDescriptor {
	return file_ExternalProtocol_proto_enumTypes[1].Descriptor()
}

func (Status_DeviceState) Type() protoreflect.EnumType {
	return &file_ExternalProtocol_proto_enumTypes[1]
}

func (x Status_DeviceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_DeviceState.Descriptor instead.
func (Status_DeviceState) EnumDescriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{4, 0}
}

type StatusResponse_Type int32

const (
	StatusResponse_OK StatusResponse_Type = 0
)

// Enum value maps for StatusResponse_Type.
var (
	StatusResponse_Type_name = map[int32]string{
		0: "OK",
	}
	StatusResponse_Type_value = map[string]int32{
		"OK": 0,
	}
)

func (x StatusResponse_Type) Enum() *StatusResponse_Type {
	p := new(StatusResponse_Type)
	*p = x
	return p
}

func (x StatusResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ExternalProtocol_proto_enumTypes[2].Descriptor()
}

func (StatusResponse_Type) Type() protoreflect.EnumType {
	return &file_ExternalProtocol_proto_enumTypes[2]
}

func (x StatusResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusResponse_Type.Descriptor instead.
func (StatusResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{5, 0}
}

type CommandResponse_Type int32

const (
	CommandResponse_OK                   CommandResponse_Type = 0
	CommandResponse_DEVICE_NOT_CONNECTED CommandResponse_Type = 1
	CommandResponse_DEVICE_NOT_SUPPORTED CommandResponse_Type = 2
	CommandResponse_INVALID_COMMAND      CommandResponse_Type = 3
)

// Enum value maps for CommandResponse_Type.
var (
	CommandResponse_Type_name = map[int32]string{
		0: "OK",
		1: "DEVICE_NOT_CONNECTED",
		2: "DEVICE_NOT_SUPPORTED",
		3: "INVALID_COMMAND",
	}
	CommandResponse_Type_value = map[string]int32{
		"OK":                   0,
		"DEVICE_NOT_CONNECTED": 1,
		"DEVICE_NOT_SUPPORTED": 2,
		"INVALID_COMMAND":      3,
	}
)

func (x CommandResponse_Type) Enum() *CommandResponse_Type {
	p := new(CommandResponse_Type)
	*p = x
	return p
}

func (x CommandResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ExternalProtocol_proto_enumTypes[3].Descriptor()
}

func (CommandResponse_Type) Type() protoreflect.EnumType {
	return &file_ExternalProtocol_proto_enumTypes[3]
}

func (x CommandResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandResponse_Type.Descriptor instead.
func (CommandResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{7, 0}
}

//*
// Special message which contains other fleet server messages
// Every message of this type can contain only one of the fleet server messages
// From Server to Client only.
type ExternalServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageType:
	//	*ExternalServer_ConnectResponse
	//	*ExternalServer_StatusResponse
	//	*ExternalServer_Command
	MessageType isExternalServer_MessageType `protobuf_oneof:"MessageType"`
}

func (x *ExternalServer) Reset() {
	*x = ExternalServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServer) ProtoMessage() {}

func (x *ExternalServer) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServer.ProtoReflect.Descriptor instead.
func (*ExternalServer) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{0}
}

func (m *ExternalServer) GetMessageType() isExternalServer_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *ExternalServer) GetConnectResponse() *ConnectResponse {
	if x, ok := x.GetMessageType().(*ExternalServer_ConnectResponse); ok {
		return x.ConnectResponse
	}
	return nil
}

func (x *ExternalServer) GetStatusResponse() *StatusResponse {
	if x, ok := x.GetMessageType().(*ExternalServer_StatusResponse); ok {
		return x.StatusResponse
	}
	return nil
}

func (x *ExternalServer) GetCommand() *Command {
	if x, ok := x.GetMessageType().(*ExternalServer_Command); ok {
		return x.Command
	}
	return nil
}

type isExternalServer_MessageType interface {
	isExternalServer_MessageType()
}

type ExternalServer_ConnectResponse struct {
	ConnectResponse *ConnectResponse `protobuf:"bytes,1,opt,name=connectResponse,proto3,oneof"`
}

type ExternalServer_StatusResponse struct {
	StatusResponse *StatusResponse `protobuf:"bytes,2,opt,name=statusResponse,proto3,oneof"`
}

type ExternalServer_Command struct {
	Command *Command `protobuf:"bytes,3,opt,name=command,proto3,oneof"`
}

func (*ExternalServer_ConnectResponse) isExternalServer_MessageType() {}

func (*ExternalServer_StatusResponse) isExternalServer_MessageType() {}

func (*ExternalServer_Command) isExternalServer_MessageType() {}

//*
// Special message which contains other fleet client messages
// Every message of this type can contain only one of the fleet client messages
// From Client to Server only.
type ExternalClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageType:
	//	*ExternalClient_Connect
	//	*ExternalClient_Status
	//	*ExternalClient_CommandResponse
	MessageType isExternalClient_MessageType `protobuf_oneof:"MessageType"`
}

func (x *ExternalClient) Reset() {
	*x = ExternalClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalClient) ProtoMessage() {}

func (x *ExternalClient) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalClient.ProtoReflect.Descriptor instead.
func (*ExternalClient) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{1}
}

func (m *ExternalClient) GetMessageType() isExternalClient_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *ExternalClient) GetConnect() *Connect {
	if x, ok := x.GetMessageType().(*ExternalClient_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *ExternalClient) GetStatus() *Status {
	if x, ok := x.GetMessageType().(*ExternalClient_Status); ok {
		return x.Status
	}
	return nil
}

func (x *ExternalClient) GetCommandResponse() *CommandResponse {
	if x, ok := x.GetMessageType().(*ExternalClient_CommandResponse); ok {
		return x.CommandResponse
	}
	return nil
}

type isExternalClient_MessageType interface {
	isExternalClient_MessageType()
}

type ExternalClient_Connect struct {
	Connect *Connect `protobuf:"bytes,1,opt,name=connect,proto3,oneof"`
}

type ExternalClient_Status struct {
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type ExternalClient_CommandResponse struct {
	CommandResponse *CommandResponse `protobuf:"bytes,3,opt,name=commandResponse,proto3,oneof"`
}

func (*ExternalClient_Connect) isExternalClient_MessageType() {}

func (*ExternalClient_Status) isExternalClient_MessageType() {}

func (*ExternalClient_CommandResponse) isExternalClient_MessageType() {}

//*
// Connect message information
// First message in new communication.
type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// sessionId of the car
	// - generated before sending first message
	// - stays same in each session
	// - is for check if server communicates with the same car
	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	//
	// Company name
	Company string `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	//
	// Car name
	VehicleName string `protobuf:"bytes,3,opt,name=vehicleName,proto3" json:"vehicleName,omitempty"`
	//
	// Unique names of all connected devices
	Devices []*Device `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{2}
}

func (x *Connect) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Connect) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Connect) GetVehicleName() string {
	if x != nil {
		return x.VehicleName
	}
	return ""
}

func (x *Connect) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

//*
// ConnectResponse information
// Response only to Connect message
type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string               `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Type      ConnectResponse_Type `protobuf:"varint,2,opt,name=type,proto3,enum=ExternalProtocol.ConnectResponse_Type" json:"type,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ConnectResponse) GetType() ConnectResponse_Type {
	if x != nil {
		return x.Type
	}
	return ConnectResponse_OK
}

//*
// Status information with error type, contains status from a device
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	//*
	// State of the device sending the Status
	DeviceState Status_DeviceState `protobuf:"varint,2,opt,name=deviceState,proto3,enum=ExternalProtocol.Status_DeviceState" json:"deviceState,omitempty"`
	//*
	// Message ID
	MessageCounter uint32 `protobuf:"varint,3,opt,name=messageCounter,proto3" json:"messageCounter,omitempty"`
	//*
	// Device specific status message, containing device information and status data
	DeviceStatus *DeviceStatus `protobuf:"bytes,4,opt,name=deviceStatus,proto3" json:"deviceStatus,omitempty"`
	//*
	// Device specific error message
	ErrorMessage []byte `protobuf:"bytes,5,opt,name=errorMessage,proto3,oneof" json:"errorMessage,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{4}
}

func (x *Status) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Status) GetDeviceState() Status_DeviceState {
	if x != nil {
		return x.DeviceState
	}
	return Status_CONNECTING
}

func (x *Status) GetMessageCounter() uint32 {
	if x != nil {
		return x.MessageCounter
	}
	return 0
}

func (x *Status) GetDeviceStatus() *DeviceStatus {
	if x != nil {
		return x.DeviceStatus
	}
	return nil
}

func (x *Status) GetErrorMessage() []byte {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

//*
// StatusResponse information
// Response only to Status message
type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string              `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Type           StatusResponse_Type `protobuf:"varint,2,opt,name=type,proto3,enum=ExternalProtocol.StatusResponse_Type" json:"type,omitempty"`
	MessageCounter uint32              `protobuf:"varint,3,opt,name=messageCounter,proto3" json:"messageCounter,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{5}
}

func (x *StatusResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StatusResponse) GetType() StatusResponse_Type {
	if x != nil {
		return x.Type
	}
	return StatusResponse_OK
}

func (x *StatusResponse) GetMessageCounter() uint32 {
	if x != nil {
		return x.MessageCounter
	}
	return 0
}

//*
// Command message information
// - contains command for a device
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	MessageCounter uint32 `protobuf:"varint,2,opt,name=messageCounter,proto3" json:"messageCounter,omitempty"`
	//*
	// command binary data and target device
	DeviceCommand *DeviceCommand `protobuf:"bytes,3,opt,name=deviceCommand,proto3" json:"deviceCommand,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{6}
}

func (x *Command) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Command) GetMessageCounter() uint32 {
	if x != nil {
		return x.MessageCounter
	}
	return 0
}

func (x *Command) GetDeviceCommand() *DeviceCommand {
	if x != nil {
		return x.DeviceCommand
	}
	return nil
}

//*
// CommandResponse information
// Response only to Command message
type CommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string               `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Type           CommandResponse_Type `protobuf:"varint,2,opt,name=type,proto3,enum=ExternalProtocol.CommandResponse_Type" json:"type,omitempty"`
	MessageCounter uint32               `protobuf:"varint,3,opt,name=messageCounter,proto3" json:"messageCounter,omitempty"`
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ExternalProtocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ExternalProtocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_ExternalProtocol_proto_rawDescGZIP(), []int{7}
}

func (x *CommandResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CommandResponse) GetType() CommandResponse_Type {
	if x != nil {
		return x.Type
	}
	return CommandResponse_OK
}

func (x *CommandResponse) GetMessageCounter() uint32 {
	if x != nil {
		return x.MessageCounter
	}
	return 0
}

var File_ExternalProtocol_proto protoreflect.FileDescriptor

var file_ExternalProtocol_proto_rawDesc = []byte{
	0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x16, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a,
	0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x10, 0x01, 0x22, 0xdb,
	0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x22, 0x45, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44,
	0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x03, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa1, 0x01, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x22, 0x0e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x22, 0x96, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22,
	0x57, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x03, 0x42, 0x3e, 0x5a, 0x21, 0x2e, 0x2e, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x61, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x62, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x18,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x62, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ExternalProtocol_proto_rawDescOnce sync.Once
	file_ExternalProtocol_proto_rawDescData = file_ExternalProtocol_proto_rawDesc
)

func file_ExternalProtocol_proto_rawDescGZIP() []byte {
	file_ExternalProtocol_proto_rawDescOnce.Do(func() {
		file_ExternalProtocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_ExternalProtocol_proto_rawDescData)
	})
	return file_ExternalProtocol_proto_rawDescData
}

var file_ExternalProtocol_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_ExternalProtocol_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ExternalProtocol_proto_goTypes = []interface{}{
	(ConnectResponse_Type)(0), // 0: ExternalProtocol.ConnectResponse.Type
	(Status_DeviceState)(0),   // 1: ExternalProtocol.Status.DeviceState
	(StatusResponse_Type)(0),  // 2: ExternalProtocol.StatusResponse.Type
	(CommandResponse_Type)(0), // 3: ExternalProtocol.CommandResponse.Type
	(*ExternalServer)(nil),    // 4: ExternalProtocol.ExternalServer
	(*ExternalClient)(nil),    // 5: ExternalProtocol.ExternalClient
	(*Connect)(nil),           // 6: ExternalProtocol.Connect
	(*ConnectResponse)(nil),   // 7: ExternalProtocol.ConnectResponse
	(*Status)(nil),            // 8: ExternalProtocol.Status
	(*StatusResponse)(nil),    // 9: ExternalProtocol.StatusResponse
	(*Command)(nil),           // 10: ExternalProtocol.Command
	(*CommandResponse)(nil),   // 11: ExternalProtocol.CommandResponse
	(*Device)(nil),            // 12: InternalProtocol.Device
	(*DeviceStatus)(nil),      // 13: InternalProtocol.DeviceStatus
	(*DeviceCommand)(nil),     // 14: InternalProtocol.DeviceCommand
}
var file_ExternalProtocol_proto_depIdxs = []int32{
	7,  // 0: ExternalProtocol.ExternalServer.connectResponse:type_name -> ExternalProtocol.ConnectResponse
	9,  // 1: ExternalProtocol.ExternalServer.statusResponse:type_name -> ExternalProtocol.StatusResponse
	10, // 2: ExternalProtocol.ExternalServer.command:type_name -> ExternalProtocol.Command
	6,  // 3: ExternalProtocol.ExternalClient.connect:type_name -> ExternalProtocol.Connect
	8,  // 4: ExternalProtocol.ExternalClient.status:type_name -> ExternalProtocol.Status
	11, // 5: ExternalProtocol.ExternalClient.commandResponse:type_name -> ExternalProtocol.CommandResponse
	12, // 6: ExternalProtocol.Connect.devices:type_name -> InternalProtocol.Device
	0,  // 7: ExternalProtocol.ConnectResponse.type:type_name -> ExternalProtocol.ConnectResponse.Type
	1,  // 8: ExternalProtocol.Status.deviceState:type_name -> ExternalProtocol.Status.DeviceState
	13, // 9: ExternalProtocol.Status.deviceStatus:type_name -> InternalProtocol.DeviceStatus
	2,  // 10: ExternalProtocol.StatusResponse.type:type_name -> ExternalProtocol.StatusResponse.Type
	14, // 11: ExternalProtocol.Command.deviceCommand:type_name -> InternalProtocol.DeviceCommand
	3,  // 12: ExternalProtocol.CommandResponse.type:type_name -> ExternalProtocol.CommandResponse.Type
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ExternalProtocol_proto_init() }
func file_ExternalProtocol_proto_init() {
	if File_ExternalProtocol_proto != nil {
		return
	}
	file_InternalProtocol_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ExternalProtocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ExternalProtocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ExternalProtocol_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ExternalServer_ConnectResponse)(nil),
		(*ExternalServer_StatusResponse)(nil),
		(*ExternalServer_Command)(nil),
	}
	file_ExternalProtocol_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ExternalClient_Connect)(nil),
		(*ExternalClient_Status)(nil),
		(*ExternalClient_CommandResponse)(nil),
	}
	file_ExternalProtocol_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ExternalProtocol_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ExternalProtocol_proto_goTypes,
		DependencyIndexes: file_ExternalProtocol_proto_depIdxs,
		EnumInfos:         file_ExternalProtocol_proto_enumTypes,
		MessageInfos:      file_ExternalProtocol_proto_msgTypes,
	}.Build()
	File_ExternalProtocol_proto = out.File
	file_ExternalProtocol_proto_rawDesc = nil
	file_ExternalProtocol_proto_goTypes = nil
	file_ExternalProtocol_proto_depIdxs = nil
}
